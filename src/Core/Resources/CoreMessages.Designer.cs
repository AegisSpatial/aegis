//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AEGIS.Resources {
    using System;
    using System.Reflection;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class CoreMessages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal CoreMessages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AEGIS.Resources.CoreMessages", typeof(CoreMessages).GetTypeInfo().Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The collection contains one or more duplicate identifiers..
        /// </summary>
        public static string CollectionContainsDuplicateIdentifiers {
            get {
                return ResourceManager.GetString("CollectionContainsDuplicateIdentifiers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The convexity ratio is greater than 1..
        /// </summary>
        public static string ConvexityRatioGreaterThan1 {
            get {
                return ResourceManager.GetString("ConvexityRatioGreaterThan1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The convexity ratio is less than 0..
        /// </summary>
        public static string ConvexityRatioLessThan0 {
            get {
                return ResourceManager.GetString("ConvexityRatioLessThan0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of coordinates is less than 3..
        /// </summary>
        public static string CoordinateCountLessThan3 {
            get {
                return ResourceManager.GetString("CoordinateCountLessThan3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The delta is less than or equal to 0..
        /// </summary>
        public static string DeltaIsEqualToOrLessThan0 {
            get {
                return ResourceManager.GetString("DeltaIsEqualToOrLessThan0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The dimension is greater than 3..
        /// </summary>
        public static string DimensionIsGreaterThan3 {
            get {
                return ResourceManager.GetString("DimensionIsGreaterThan3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified dimension is invalid..
        /// </summary>
        public static string DimensionIsInvalid {
            get {
                return ResourceManager.GetString("DimensionIsInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The dimension is less than 2..
        /// </summary>
        public static string DimensionIsLessThan2 {
            get {
                return ResourceManager.GetString("DimensionIsLessThan2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Distance metric is null. You must specify a distance metric..
        /// </summary>
        public static string DistanceMetricIsMissing {
            get {
                return ResourceManager.GetString("DistanceMetricIsMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The envelope&apos;s minimum coordinate is greater than the maximum coordinate..
        /// </summary>
        public static string EnvelopeMinIsGreaterThanMax {
            get {
                return ResourceManager.GetString("EnvelopeMinIsGreaterThanMax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The edge of the event is greater than the number of edges in the source..
        /// </summary>
        public static string EventEdgeIsGreaterThanNumberOfEdges {
            get {
                return ResourceManager.GetString("EventEdgeIsGreaterThanNumberOfEdges", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The edge of the event is less than 0..
        /// </summary>
        public static string EventEdgeIsLessThan0 {
            get {
                return ResourceManager.GetString("EventEdgeIsLessThan0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The factory is invalid..
        /// </summary>
        public static string FactoryIsInvalid {
            get {
                return ResourceManager.GetString("FactoryIsInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The factory behavior does not implement the contract..
        /// </summary>
        public static string FactoryNotImplementingContract {
            get {
                return ResourceManager.GetString("FactoryNotImplementingContract", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Comparison of the specified geometries is not supported..
        /// </summary>
        public static string GeometryComparisonNotSupported {
            get {
                return ResourceManager.GetString("GeometryComparisonNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified geometry is invalid..
        /// </summary>
        public static string GeometryIsInvalid {
            get {
                return ResourceManager.GetString("GeometryIsInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified geometry is not supported..
        /// </summary>
        public static string GeometryIsNotSupported {
            get {
                return ResourceManager.GetString("GeometryIsNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type of the geometry is not supported..
        /// </summary>
        public static string GeometryTypeNotSupported {
            get {
                return ResourceManager.GetString("GeometryTypeNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Holes are not supported in the triangle..
        /// </summary>
        public static string HolesNotSupportedInTriangle {
            get {
                return ResourceManager.GetString("HolesNotSupportedInTriangle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Index is equal to or greater than the number of holes..
        /// </summary>
        public static string IndexIsEqualToOrGreaterThanHoleCount {
            get {
                return ResourceManager.GetString("IndexIsEqualToOrGreaterThanHoleCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The index is equal to or greater than the number of coordinates..
        /// </summary>
        public static string IndexIsEqualToOrGreaterThanNumberOfCoordinates {
            get {
                return ResourceManager.GetString("IndexIsEqualToOrGreaterThanNumberOfCoordinates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An item with the same identifier already exists in the collection..
        /// </summary>
        public static string ItemIdentifierExists {
            get {
                return ResourceManager.GetString("ItemIdentifierExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified item was already in the tree..
        /// </summary>
        public static string ItemWasAlreadyInTree {
            get {
                return ResourceManager.GetString("ItemWasAlreadyInTree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extension of lines is not supported..
        /// </summary>
        public static string LineExtensionNotSupported {
            get {
                return ResourceManager.GetString("LineExtensionNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reduction of lines is not supported..
        /// </summary>
        public static string LineReductionNotSupported {
            get {
                return ResourceManager.GetString("LineReductionNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum number of child nodes is equal to or less than the minimum number of child nodes..
        /// </summary>
        public static string MaximumNumberOfChildNodesIsEqualToMinimum {
            get {
                return ResourceManager.GetString("MaximumNumberOfChildNodesIsEqualToMinimum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The minimum number of child nodes is less than 1..
        /// </summary>
        public static string MinimumNumberOfChildNodesIsLessThan1 {
            get {
                return ResourceManager.GetString("MinimumNumberOfChildNodesIsLessThan1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are no holes in the polygon..
        /// </summary>
        public static string NoHolesInPolygon {
            get {
                return ResourceManager.GetString("NoHolesInPolygon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No models are specified..
        /// </summary>
        public static string NoModelsSpecified {
            get {
                return ResourceManager.GetString("NoModelsSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of coordinates is less than 3..
        /// </summary>
        public static string NumberOfCoordinatesIsLessThan3 {
            get {
                return ResourceManager.GetString("NumberOfCoordinatesIsLessThan3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type of the other geometry is not supported..
        /// </summary>
        public static string OtherGeometryNotSupported {
            get {
                return ResourceManager.GetString("OtherGeometryNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Partition policy is null. You must specify a partition policy..
        /// </summary>
        public static string PartitionPolicyIsMissing {
            get {
                return ResourceManager.GetString("PartitionPolicyIsMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Promote policy is null. You must specify a promote policy..
        /// </summary>
        public static string PromotePolicyIsMissing {
            get {
                return ResourceManager.GetString("PromotePolicyIsMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The scale is equal to or less than 0..
        /// </summary>
        public static string ScaleIsEqualToOrLessThan0 {
            get {
                return ResourceManager.GetString("ScaleIsEqualToOrLessThan0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The segments do not intersect..
        /// </summary>
        public static string SegmentsDoNotIntersect {
            get {
                return ResourceManager.GetString("SegmentsDoNotIntersect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The segments do not overlap..
        /// </summary>
        public static string SegmentsDoNotOverlap {
            get {
                return ResourceManager.GetString("SegmentsDoNotOverlap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified source is invalid..
        /// </summary>
        public static string SourceIsInvalid {
            get {
                return ResourceManager.GetString("SourceIsInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified source is not supported..
        /// </summary>
        public static string SourceIsNotSupported {
            get {
                return ResourceManager.GetString("SourceIsNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Split policy is null. You must specify a split policy..
        /// </summary>
        public static string SplitPolicyIsMissing {
            get {
                return ResourceManager.GetString("SplitPolicyIsMissing", resourceCulture);
            }
        }
    }
}
