//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AEGIS.Storage.Resources {
    using System;
    using System.Reflection;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class StorageMessages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal StorageMessages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AEGIS.Storage.Resources.StorageMessages", typeof(StorageMessages).GetTypeInfo().Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The authentication is not supported..
        /// </summary>
        public static string AuthenticationIsNotSupported {
            get {
                return ResourceManager.GetString("AuthenticationIsNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The authentication is null..
        /// </summary>
        public static string AuthenticationIsNull {
            get {
                return ResourceManager.GetString("AuthenticationIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The HTTP client is null..
        /// </summary>
        public static string ClientIsNull {
            get {
                return ResourceManager.GetString("ClientIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The destination path already exists..
        /// </summary>
        public static string DestinationPathExists {
            get {
                return ResourceManager.GetString("DestinationPathExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The destination path is in an invalid format..
        /// </summary>
        public static string DestinationPathInvalidFormat {
            get {
                return ResourceManager.GetString("DestinationPathInvalidFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The destination path is empty, or consists only of white space characters..
        /// </summary>
        public static string DestinationPathIsEmpty {
            get {
                return ResourceManager.GetString("DestinationPathIsEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The destination path is null..
        /// </summary>
        public static string DestinationPathIsNull {
            get {
                return ResourceManager.GetString("DestinationPathIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The driver is null..
        /// </summary>
        public static string DriverIsNull {
            get {
                return ResourceManager.GetString("DriverIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation is not supported by the file system..
        /// </summary>
        public static string FileSystemOperationNotSupported {
            get {
                return ResourceManager.GetString("FileSystemOperationNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The hostname is empty, or consists only of whitespace characters..
        /// </summary>
        public static string HostnameIsEmpty {
            get {
                return ResourceManager.GetString("HostnameIsEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The hostname is in an invalid format..
        /// </summary>
        public static string HostnameIsInvalid {
            get {
                return ResourceManager.GetString("HostnameIsInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The hostname is null..
        /// </summary>
        public static string HostnameIsNull {
            get {
                return ResourceManager.GetString("HostnameIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file access is invalid..
        /// </summary>
        public static string InvalidFileAccess {
            get {
                return ResourceManager.GetString("InvalidFileAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file mode is invalid..
        /// </summary>
        public static string InvalidFileMode {
            get {
                return ResourceManager.GetString("InvalidFileMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified file mode and file access combination is invalid..
        /// </summary>
        public static string InvalidFileModeOrAccess {
            get {
                return ResourceManager.GetString("InvalidFileModeOrAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The remote address returned with an invalid response..
        /// </summary>
        public static string InvalidResponseFromRemote {
            get {
                return ResourceManager.GetString("InvalidResponseFromRemote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The search pattern is an invalid format..
        /// </summary>
        public static string InvalidSearchPattern {
            get {
                return ResourceManager.GetString("InvalidSearchPattern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The length is less than 0..
        /// </summary>
        public static string LengthIsLessThan0 {
            get {
                return ResourceManager.GetString("LengthIsLessThan0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The location is null..
        /// </summary>
        public static string LocationIsNull {
            get {
                return ResourceManager.GetString("LocationIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name is null..
        /// </summary>
        public static string NameIsNull {
            get {
                return ResourceManager.GetString("NameIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No connection is available to the file system..
        /// </summary>
        public static string NoConnectionToFileSystem {
            get {
                return ResourceManager.GetString("NoConnectionToFileSystem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No connection is available to the specified path..
        /// </summary>
        public static string NoConnectionToPath {
            get {
                return ResourceManager.GetString("NoConnectionToPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The offset is less than 0..
        /// </summary>
        public static string OffsetIsLessThan0 {
            get {
                return ResourceManager.GetString("OffsetIsLessThan0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path does not exist..
        /// </summary>
        public static string PathDoesNotExist {
            get {
                return ResourceManager.GetString("PathDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path already exists..
        /// </summary>
        public static string PathExists {
            get {
                return ResourceManager.GetString("PathExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file system entry on the specified path is currently in use..
        /// </summary>
        public static string PathInUse {
            get {
                return ResourceManager.GetString("PathInUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path is a directory..
        /// </summary>
        public static string PathIsDirectory {
            get {
                return ResourceManager.GetString("PathIsDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path is empty, or consists only of white space characters..
        /// </summary>
        public static string PathIsEmpty {
            get {
                return ResourceManager.GetString("PathIsEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified path is a file..
        /// </summary>
        public static string PathIsFile {
            get {
                return ResourceManager.GetString("PathIsFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path is in an invalid format..
        /// </summary>
        public static string PathIsInInvalidFormat {
            get {
                return ResourceManager.GetString("PathIsInInvalidFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path is not supported..
        /// </summary>
        public static string PathIsNotSupported {
            get {
                return ResourceManager.GetString("PathIsNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path is null..
        /// </summary>
        public static string PathIsNull {
            get {
                return ResourceManager.GetString("PathIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file on path is read-only..
        /// </summary>
        public static string PathIsReadOnly {
            get {
                return ResourceManager.GetString("PathIsReadOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path exceeds the maximum length supported by the file system..
        /// </summary>
        public static string PathIsTooLong {
            get {
                return ResourceManager.GetString("PathIsTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The caller does not have the required permission for the path..
        /// </summary>
        public static string PathUnauthorized {
            get {
                return ResourceManager.GetString("PathUnauthorized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The port number is less than 1..
        /// </summary>
        public static string PostNumberIsLessThan1 {
            get {
                return ResourceManager.GetString("PostNumberIsLessThan1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The source and destination paths are equal..
        /// </summary>
        public static string SourceAndDestinationPathEqual {
            get {
                return ResourceManager.GetString("SourceAndDestinationPathEqual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The caller does not have the required permission for either the source or the destination path..
        /// </summary>
        public static string SourceOrDestinationPathUnauthorized {
            get {
                return ResourceManager.GetString("SourceOrDestinationPathUnauthorized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The source path does not exist..
        /// </summary>
        public static string SourcePathDoesNotExist {
            get {
                return ResourceManager.GetString("SourcePathDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The source path is empty, or consists only of white space characters..
        /// </summary>
        public static string SourcePathIsEmpty {
            get {
                return ResourceManager.GetString("SourcePathIsEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The source path is in an invalid format..
        /// </summary>
        public static string SourcePathIsInInvalidFormat {
            get {
                return ResourceManager.GetString("SourcePathIsInInvalidFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The source path is null..
        /// </summary>
        public static string SourcePathIsNull {
            get {
                return ResourceManager.GetString("SourcePathIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path exceeds the maximum length supported by the file system..
        /// </summary>
        public static string SourcePathTooLong {
            get {
                return ResourceManager.GetString("SourcePathTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type is null..
        /// </summary>
        public static string TypeIsNull {
            get {
                return ResourceManager.GetString("TypeIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The caller does not have the required permission..
        /// </summary>
        public static string Unauthorized {
            get {
                return ResourceManager.GetString("Unauthorized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The URI scheme is null..
        /// </summary>
        public static string UriSchemeIsNull {
            get {
                return ResourceManager.GetString("UriSchemeIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The username is empty..
        /// </summary>
        public static string UsernameIsEmpty {
            get {
                return ResourceManager.GetString("UsernameIsEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The username is null..
        /// </summary>
        public static string UsernameIsNull {
            get {
                return ResourceManager.GetString("UsernameIsNull", resourceCulture);
            }
        }
    }
}
